# Main doc: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/introduction-to-github-actions
# Runners spec: https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
# Glob expressions: https://github.com/actions/toolkit/tree/main/packages/glob

name: Ubuntu_dev

###############################################################################
# Schedule:
# - daily
###############################################################################
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      platform:
        description: 'Arguments for the platform script:'
        required: true
        default: '-extent=x -parallel=p -jobs=2 -large=i -compcert=y -unimath=n -set-switch=y'

###############################################################################
# Platform script options shared among all jobs
###############################################################################
env:
  PLATFORM: -extent=x -parallel=p -jobs=2 -large=i -compcert=y -unimath=n -set-switch=y
  COQREGTESTING: y

###############################################################################
# Ubuntu
#
# CAVEATS:
# - you need bubblewrap or the script fails
# - build-essential pulls in the C toolchain
###############################################################################
jobs:
  Ubuntu_platform:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant:
          - 'dev'

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set PLATFORM
        if: ${{ github.event.inputs.platform != '' }}
        run: echo "PLATFORM=${{ github.event.inputs.platform }}" >> $GITHUB_ENV

      - name: Install bubblewrap and build-essential
        run: |
          sudo apt-get update
          sudo apt-get install bubblewrap build-essential

      - name: Run common platform script
        shell: bash
        run: ./coq_platform_make.sh  -packages=${{matrix.variant}} $PLATFORM -dumplogs

      - name: Create smoke test kit
        shell: bash
        run: |
          eval $(opam env)
          shell_scripts/create_smoke_test_kit.sh

      - name: 'Run Linux smoke test kit'
        shell: bash
        run: |
          eval $(opam env)
          smoke-test-kit/run-smoke-test.sh

      - name: 'Upload smoke test kit'
        uses: actions/upload-artifact@v3
        with:
          name: 'Smoke Test Kit ${{matrix.variant}}'
          path: smoke-test-kit
          retention-days: 5
